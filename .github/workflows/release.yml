name: ðŸ“¦ Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: YOLOv8 Vehicle Annotator ${{ github.ref }}
        body: |
          ## What's Changed
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.2.0...${{ github.ref_name }}
          
          ## Installation
          
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd yolo-vehicle-annotator
          pip install -r requirements.txt
          python main.py
          ```
          
          ## System Requirements
          - Python 3.8+
          - 4GB RAM (8GB recommended)
          - Windows 10/11, macOS 10.14+, or Ubuntu 18.04+
          
          ## Key Features
          - ðŸ¤– AI auto-annotation with YOLOv8
          - ðŸŽ¯ Precise 8-handle editor
          - ðŸ“¤ Multi-format export (YOLO, COCO, Pascal VOC, JSON)
          - âš¡ Performance optimization and memory management
          - ðŸŽ¨ Modern dark theme UI
          
        draft: false
        prerelease: false
        
  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --windowed \
          --add-data "requirements.txt:." \
          --add-data "classes.txt:." \
          --name "yolo-vehicle-annotator-linux" \
          main.py
          
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed `
          --add-data "requirements.txt;." `
          --add-data "classes.txt;." `
          --name "yolo-vehicle-annotator-windows" `
          main.py
          
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed \
          --add-data "requirements.txt:." \
          --add-data "classes.txt:." \
          --name "yolo-vehicle-annotator-macos" \
          main.py
          
    - name: Create distribution package
      run: |
        mkdir -p release-package
        cp -r *.py requirements.txt classes.txt README.md LICENSE CHANGELOG.md release-package/
        
    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd release-package
        tar -czf ../yolo-vehicle-annotator-${{ matrix.os }}-source.tar.gz *
        
    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd release-package
        7z a ../yolo-vehicle-annotator-windows-source.zip *
        
    - name: Upload executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/yolo-vehicle-annotator-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'macos' }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_name: yolo-vehicle-annotator-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'macos' }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_content_type: application/octet-stream
        
    - name: Upload source package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./yolo-vehicle-annotator-${{ matrix.os }}-source.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
        asset_name: yolo-vehicle-annotator-${{ matrix.os }}-source.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
        asset_content_type: application/octet-stream
